#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MusicWeb.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AppNgheNhac")]
	public partial class DBMusicDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAlbum(Album instance);
    partial void UpdateAlbum(Album instance);
    partial void DeleteAlbum(Album instance);
    partial void InsertCTPlayList(CTPlayList instance);
    partial void UpdateCTPlayList(CTPlayList instance);
    partial void DeleteCTPlayList(CTPlayList instance);
    partial void InsertNgheSi(NgheSi instance);
    partial void UpdateNgheSi(NgheSi instance);
    partial void DeleteNgheSi(NgheSi instance);
    partial void InsertNhac(Nhac instance);
    partial void UpdateNhac(Nhac instance);
    partial void DeleteNhac(Nhac instance);
    partial void InsertPlayList(PlayList instance);
    partial void UpdatePlayList(PlayList instance);
    partial void DeletePlayList(PlayList instance);
    partial void InsertSangTac(SangTac instance);
    partial void UpdateSangTac(SangTac instance);
    partial void DeleteSangTac(SangTac instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    #endregion
		
		public DBMusicDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AppNgheNhacConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBMusicDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBMusicDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBMusicDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBMusicDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Album> Albums
		{
			get
			{
				return this.GetTable<Album>();
			}
		}
		
		public System.Data.Linq.Table<CTPlayList> CTPlayLists
		{
			get
			{
				return this.GetTable<CTPlayList>();
			}
		}
		
		public System.Data.Linq.Table<NgheSi> NgheSis
		{
			get
			{
				return this.GetTable<NgheSi>();
			}
		}
		
		public System.Data.Linq.Table<Nhac> Nhacs
		{
			get
			{
				return this.GetTable<Nhac>();
			}
		}
		
		public System.Data.Linq.Table<PlayList> PlayLists
		{
			get
			{
				return this.GetTable<PlayList>();
			}
		}
		
		public System.Data.Linq.Table<SangTac> SangTacs
		{
			get
			{
				return this.GetTable<SangTac>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admins")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaAdmin;
		
		private string _TenAdmin;
		
		private string _Email;
		
		private string _MatKhau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaAdminChanging(int value);
    partial void OnMaAdminChanged();
    partial void OnTenAdminChanging(string value);
    partial void OnTenAdminChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaAdmin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaAdmin
		{
			get
			{
				return this._MaAdmin;
			}
			set
			{
				if ((this._MaAdmin != value))
				{
					this.OnMaAdminChanging(value);
					this.SendPropertyChanging();
					this._MaAdmin = value;
					this.SendPropertyChanged("MaAdmin");
					this.OnMaAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenAdmin", DbType="NVarChar(50)")]
		public string TenAdmin
		{
			get
			{
				return this._TenAdmin;
			}
			set
			{
				if ((this._TenAdmin != value))
				{
					this.OnTenAdminChanging(value);
					this.SendPropertyChanging();
					this._TenAdmin = value;
					this.SendPropertyChanged("TenAdmin");
					this.OnTenAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(20)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaUser;
		
		private string _TenUser;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private EntitySet<PlayList> _PlayLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaUserChanging(int value);
    partial void OnMaUserChanged();
    partial void OnTenUserChanging(string value);
    partial void OnTenUserChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public User()
		{
			this._PlayLists = new EntitySet<PlayList>(new Action<PlayList>(this.attach_PlayLists), new Action<PlayList>(this.detach_PlayLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaUser
		{
			get
			{
				return this._MaUser;
			}
			set
			{
				if ((this._MaUser != value))
				{
					this.OnMaUserChanging(value);
					this.SendPropertyChanging();
					this._MaUser = value;
					this.SendPropertyChanged("MaUser");
					this.OnMaUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenUser", DbType="NVarChar(50)")]
		public string TenUser
		{
			get
			{
				return this._TenUser;
			}
			set
			{
				if ((this._TenUser != value))
				{
					this.OnTenUserChanging(value);
					this.SendPropertyChanging();
					this._TenUser = value;
					this.SendPropertyChanged("TenUser");
					this.OnTenUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(20)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PlayList", Storage="_PlayLists", ThisKey="MaUser", OtherKey="MaUser")]
		public EntitySet<PlayList> PlayLists
		{
			get
			{
				return this._PlayLists;
			}
			set
			{
				this._PlayLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlayLists(PlayList entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PlayLists(PlayList entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Album")]
	public partial class Album : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaAlbum;
		
		private string _TenAlbum;
		
		private EntitySet<Nhac> _Nhacs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaAlbumChanging(int value);
    partial void OnMaAlbumChanged();
    partial void OnTenAlbumChanging(string value);
    partial void OnTenAlbumChanged();
    #endregion
		
		public Album()
		{
			this._Nhacs = new EntitySet<Nhac>(new Action<Nhac>(this.attach_Nhacs), new Action<Nhac>(this.detach_Nhacs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaAlbum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaAlbum
		{
			get
			{
				return this._MaAlbum;
			}
			set
			{
				if ((this._MaAlbum != value))
				{
					this.OnMaAlbumChanging(value);
					this.SendPropertyChanging();
					this._MaAlbum = value;
					this.SendPropertyChanged("MaAlbum");
					this.OnMaAlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenAlbum", DbType="NVarChar(50)")]
		public string TenAlbum
		{
			get
			{
				return this._TenAlbum;
			}
			set
			{
				if ((this._TenAlbum != value))
				{
					this.OnTenAlbumChanging(value);
					this.SendPropertyChanging();
					this._TenAlbum = value;
					this.SendPropertyChanged("TenAlbum");
					this.OnTenAlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Nhac", Storage="_Nhacs", ThisKey="MaAlbum", OtherKey="MaAlbum")]
		public EntitySet<Nhac> Nhacs
		{
			get
			{
				return this._Nhacs;
			}
			set
			{
				this._Nhacs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nhacs(Nhac entity)
		{
			this.SendPropertyChanging();
			entity.Album = this;
		}
		
		private void detach_Nhacs(Nhac entity)
		{
			this.SendPropertyChanging();
			entity.Album = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPlayList")]
	public partial class CTPlayList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPlayList;
		
		private int _MaBaiNhac;
		
		private EntityRef<Nhac> _Nhac;
		
		private EntityRef<PlayList> _PlayList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPlayListChanging(int value);
    partial void OnMaPlayListChanged();
    partial void OnMaBaiNhacChanging(int value);
    partial void OnMaBaiNhacChanged();
    #endregion
		
		public CTPlayList()
		{
			this._Nhac = default(EntityRef<Nhac>);
			this._PlayList = default(EntityRef<PlayList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPlayList", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPlayList
		{
			get
			{
				return this._MaPlayList;
			}
			set
			{
				if ((this._MaPlayList != value))
				{
					if (this._PlayList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPlayListChanging(value);
					this.SendPropertyChanging();
					this._MaPlayList = value;
					this.SendPropertyChanged("MaPlayList");
					this.OnMaPlayListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaiNhac", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBaiNhac
		{
			get
			{
				return this._MaBaiNhac;
			}
			set
			{
				if ((this._MaBaiNhac != value))
				{
					if (this._Nhac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBaiNhacChanging(value);
					this.SendPropertyChanging();
					this._MaBaiNhac = value;
					this.SendPropertyChanged("MaBaiNhac");
					this.OnMaBaiNhacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhac_CTPlayList", Storage="_Nhac", ThisKey="MaBaiNhac", OtherKey="MaBaiNhac", IsForeignKey=true)]
		public Nhac Nhac
		{
			get
			{
				return this._Nhac.Entity;
			}
			set
			{
				Nhac previousValue = this._Nhac.Entity;
				if (((previousValue != value) 
							|| (this._Nhac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nhac.Entity = null;
						previousValue.CTPlayLists.Remove(this);
					}
					this._Nhac.Entity = value;
					if ((value != null))
					{
						value.CTPlayLists.Add(this);
						this._MaBaiNhac = value.MaBaiNhac;
					}
					else
					{
						this._MaBaiNhac = default(int);
					}
					this.SendPropertyChanged("Nhac");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlayList_CTPlayList", Storage="_PlayList", ThisKey="MaPlayList", OtherKey="MaPlayList", IsForeignKey=true)]
		public PlayList PlayList
		{
			get
			{
				return this._PlayList.Entity;
			}
			set
			{
				PlayList previousValue = this._PlayList.Entity;
				if (((previousValue != value) 
							|| (this._PlayList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlayList.Entity = null;
						previousValue.CTPlayLists.Remove(this);
					}
					this._PlayList.Entity = value;
					if ((value != null))
					{
						value.CTPlayLists.Add(this);
						this._MaPlayList = value.MaPlayList;
					}
					else
					{
						this._MaPlayList = default(int);
					}
					this.SendPropertyChanged("PlayList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NgheSi")]
	public partial class NgheSi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNgheSi;
		
		private string _TenNgheSi;
		
		private EntitySet<Nhac> _Nhacs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNgheSiChanging(int value);
    partial void OnMaNgheSiChanged();
    partial void OnTenNgheSiChanging(string value);
    partial void OnTenNgheSiChanged();
    #endregion
		
		public NgheSi()
		{
			this._Nhacs = new EntitySet<Nhac>(new Action<Nhac>(this.attach_Nhacs), new Action<Nhac>(this.detach_Nhacs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNgheSi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNgheSi
		{
			get
			{
				return this._MaNgheSi;
			}
			set
			{
				if ((this._MaNgheSi != value))
				{
					this.OnMaNgheSiChanging(value);
					this.SendPropertyChanging();
					this._MaNgheSi = value;
					this.SendPropertyChanged("MaNgheSi");
					this.OnMaNgheSiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNgheSi", DbType="NVarChar(50)")]
		public string TenNgheSi
		{
			get
			{
				return this._TenNgheSi;
			}
			set
			{
				if ((this._TenNgheSi != value))
				{
					this.OnTenNgheSiChanging(value);
					this.SendPropertyChanging();
					this._TenNgheSi = value;
					this.SendPropertyChanged("TenNgheSi");
					this.OnTenNgheSiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NgheSi_Nhac", Storage="_Nhacs", ThisKey="MaNgheSi", OtherKey="MaNgheSi")]
		public EntitySet<Nhac> Nhacs
		{
			get
			{
				return this._Nhacs;
			}
			set
			{
				this._Nhacs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nhacs(Nhac entity)
		{
			this.SendPropertyChanging();
			entity.NgheSi = this;
		}
		
		private void detach_Nhacs(Nhac entity)
		{
			this.SendPropertyChanging();
			entity.NgheSi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nhac")]
	public partial class Nhac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBaiNhac;
		
		private string _TenNhac;
		
		private System.Nullable<System.DateTime> _NgayCN;
		
		private System.Nullable<int> _MaNgheSi;
		
		private System.Nullable<int> _MaLoai;
		
		private System.Nullable<int> _MaSangTac;
		
		private System.Nullable<int> _MaAlbum;
		
		private string _FileNhac;
		
		private string _FileAnh;
		
		private EntitySet<CTPlayList> _CTPlayLists;
		
		private EntityRef<Album> _Album;
		
		private EntityRef<NgheSi> _NgheSi;
		
		private EntityRef<SangTac> _SangTac;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBaiNhacChanging(int value);
    partial void OnMaBaiNhacChanged();
    partial void OnTenNhacChanging(string value);
    partial void OnTenNhacChanged();
    partial void OnNgayCNChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCNChanged();
    partial void OnMaNgheSiChanging(System.Nullable<int> value);
    partial void OnMaNgheSiChanged();
    partial void OnMaLoaiChanging(System.Nullable<int> value);
    partial void OnMaLoaiChanged();
    partial void OnMaSangTacChanging(System.Nullable<int> value);
    partial void OnMaSangTacChanged();
    partial void OnMaAlbumChanging(System.Nullable<int> value);
    partial void OnMaAlbumChanged();
    partial void OnFileNhacChanging(string value);
    partial void OnFileNhacChanged();
    partial void OnFileAnhChanging(string value);
    partial void OnFileAnhChanged();
    #endregion
		
		public Nhac()
		{
			this._CTPlayLists = new EntitySet<CTPlayList>(new Action<CTPlayList>(this.attach_CTPlayLists), new Action<CTPlayList>(this.detach_CTPlayLists));
			this._Album = default(EntityRef<Album>);
			this._NgheSi = default(EntityRef<NgheSi>);
			this._SangTac = default(EntityRef<SangTac>);
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaiNhac", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBaiNhac
		{
			get
			{
				return this._MaBaiNhac;
			}
			set
			{
				if ((this._MaBaiNhac != value))
				{
					this.OnMaBaiNhacChanging(value);
					this.SendPropertyChanging();
					this._MaBaiNhac = value;
					this.SendPropertyChanged("MaBaiNhac");
					this.OnMaBaiNhacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhac", DbType="NVarChar(50)")]
		public string TenNhac
		{
			get
			{
				return this._TenNhac;
			}
			set
			{
				if ((this._TenNhac != value))
				{
					this.OnTenNhacChanging(value);
					this.SendPropertyChanging();
					this._TenNhac = value;
					this.SendPropertyChanged("TenNhac");
					this.OnTenNhacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCN", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCN
		{
			get
			{
				return this._NgayCN;
			}
			set
			{
				if ((this._NgayCN != value))
				{
					this.OnNgayCNChanging(value);
					this.SendPropertyChanging();
					this._NgayCN = value;
					this.SendPropertyChanged("NgayCN");
					this.OnNgayCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNgheSi", DbType="Int")]
		public System.Nullable<int> MaNgheSi
		{
			get
			{
				return this._MaNgheSi;
			}
			set
			{
				if ((this._MaNgheSi != value))
				{
					if (this._NgheSi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNgheSiChanging(value);
					this.SendPropertyChanging();
					this._MaNgheSi = value;
					this.SendPropertyChanged("MaNgheSi");
					this.OnMaNgheSiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Int")]
		public System.Nullable<int> MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSangTac", DbType="Int")]
		public System.Nullable<int> MaSangTac
		{
			get
			{
				return this._MaSangTac;
			}
			set
			{
				if ((this._MaSangTac != value))
				{
					if (this._SangTac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSangTacChanging(value);
					this.SendPropertyChanging();
					this._MaSangTac = value;
					this.SendPropertyChanged("MaSangTac");
					this.OnMaSangTacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaAlbum", DbType="Int")]
		public System.Nullable<int> MaAlbum
		{
			get
			{
				return this._MaAlbum;
			}
			set
			{
				if ((this._MaAlbum != value))
				{
					if (this._Album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaAlbumChanging(value);
					this.SendPropertyChanging();
					this._MaAlbum = value;
					this.SendPropertyChanged("MaAlbum");
					this.OnMaAlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileNhac", DbType="VarChar(MAX)")]
		public string FileNhac
		{
			get
			{
				return this._FileNhac;
			}
			set
			{
				if ((this._FileNhac != value))
				{
					this.OnFileNhacChanging(value);
					this.SendPropertyChanging();
					this._FileNhac = value;
					this.SendPropertyChanged("FileNhac");
					this.OnFileNhacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileAnh", DbType="VarChar(MAX)")]
		public string FileAnh
		{
			get
			{
				return this._FileAnh;
			}
			set
			{
				if ((this._FileAnh != value))
				{
					this.OnFileAnhChanging(value);
					this.SendPropertyChanging();
					this._FileAnh = value;
					this.SendPropertyChanged("FileAnh");
					this.OnFileAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhac_CTPlayList", Storage="_CTPlayLists", ThisKey="MaBaiNhac", OtherKey="MaBaiNhac")]
		public EntitySet<CTPlayList> CTPlayLists
		{
			get
			{
				return this._CTPlayLists;
			}
			set
			{
				this._CTPlayLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Nhac", Storage="_Album", ThisKey="MaAlbum", OtherKey="MaAlbum", IsForeignKey=true)]
		public Album Album
		{
			get
			{
				return this._Album.Entity;
			}
			set
			{
				Album previousValue = this._Album.Entity;
				if (((previousValue != value) 
							|| (this._Album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Album.Entity = null;
						previousValue.Nhacs.Remove(this);
					}
					this._Album.Entity = value;
					if ((value != null))
					{
						value.Nhacs.Add(this);
						this._MaAlbum = value.MaAlbum;
					}
					else
					{
						this._MaAlbum = default(Nullable<int>);
					}
					this.SendPropertyChanged("Album");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NgheSi_Nhac", Storage="_NgheSi", ThisKey="MaNgheSi", OtherKey="MaNgheSi", IsForeignKey=true)]
		public NgheSi NgheSi
		{
			get
			{
				return this._NgheSi.Entity;
			}
			set
			{
				NgheSi previousValue = this._NgheSi.Entity;
				if (((previousValue != value) 
							|| (this._NgheSi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NgheSi.Entity = null;
						previousValue.Nhacs.Remove(this);
					}
					this._NgheSi.Entity = value;
					if ((value != null))
					{
						value.Nhacs.Add(this);
						this._MaNgheSi = value.MaNgheSi;
					}
					else
					{
						this._MaNgheSi = default(Nullable<int>);
					}
					this.SendPropertyChanged("NgheSi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SangTac_Nhac", Storage="_SangTac", ThisKey="MaSangTac", OtherKey="MaSangTac", IsForeignKey=true)]
		public SangTac SangTac
		{
			get
			{
				return this._SangTac.Entity;
			}
			set
			{
				SangTac previousValue = this._SangTac.Entity;
				if (((previousValue != value) 
							|| (this._SangTac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SangTac.Entity = null;
						previousValue.Nhacs.Remove(this);
					}
					this._SangTac.Entity = value;
					if ((value != null))
					{
						value.Nhacs.Add(this);
						this._MaSangTac = value.MaSangTac;
					}
					else
					{
						this._MaSangTac = default(Nullable<int>);
					}
					this.SendPropertyChanged("SangTac");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Nhac", Storage="_TheLoai", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.Nhacs.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.Nhacs.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPlayLists(CTPlayList entity)
		{
			this.SendPropertyChanging();
			entity.Nhac = this;
		}
		
		private void detach_CTPlayLists(CTPlayList entity)
		{
			this.SendPropertyChanging();
			entity.Nhac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlayList")]
	public partial class PlayList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPlayList;
		
		private string _TenPlayList;
		
		private System.Nullable<int> _MaUser;
		
		private System.Nullable<System.DateTime> _ThoiGianTao;
		
		private EntitySet<CTPlayList> _CTPlayLists;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPlayListChanging(int value);
    partial void OnMaPlayListChanged();
    partial void OnTenPlayListChanging(string value);
    partial void OnTenPlayListChanged();
    partial void OnMaUserChanging(System.Nullable<int> value);
    partial void OnMaUserChanged();
    partial void OnThoiGianTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianTaoChanged();
    #endregion
		
		public PlayList()
		{
			this._CTPlayLists = new EntitySet<CTPlayList>(new Action<CTPlayList>(this.attach_CTPlayLists), new Action<CTPlayList>(this.detach_CTPlayLists));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPlayList", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPlayList
		{
			get
			{
				return this._MaPlayList;
			}
			set
			{
				if ((this._MaPlayList != value))
				{
					this.OnMaPlayListChanging(value);
					this.SendPropertyChanging();
					this._MaPlayList = value;
					this.SendPropertyChanged("MaPlayList");
					this.OnMaPlayListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPlayList", DbType="NVarChar(50)")]
		public string TenPlayList
		{
			get
			{
				return this._TenPlayList;
			}
			set
			{
				if ((this._TenPlayList != value))
				{
					this.OnTenPlayListChanging(value);
					this.SendPropertyChanging();
					this._TenPlayList = value;
					this.SendPropertyChanged("TenPlayList");
					this.OnTenPlayListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaUser", DbType="Int")]
		public System.Nullable<int> MaUser
		{
			get
			{
				return this._MaUser;
			}
			set
			{
				if ((this._MaUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaUserChanging(value);
					this.SendPropertyChanging();
					this._MaUser = value;
					this.SendPropertyChanged("MaUser");
					this.OnMaUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianTao", DbType="Date")]
		public System.Nullable<System.DateTime> ThoiGianTao
		{
			get
			{
				return this._ThoiGianTao;
			}
			set
			{
				if ((this._ThoiGianTao != value))
				{
					this.OnThoiGianTaoChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianTao = value;
					this.SendPropertyChanged("ThoiGianTao");
					this.OnThoiGianTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PlayList_CTPlayList", Storage="_CTPlayLists", ThisKey="MaPlayList", OtherKey="MaPlayList")]
		public EntitySet<CTPlayList> CTPlayLists
		{
			get
			{
				return this._CTPlayLists;
			}
			set
			{
				this._CTPlayLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PlayList", Storage="_User", ThisKey="MaUser", OtherKey="MaUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PlayLists.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PlayLists.Add(this);
						this._MaUser = value.MaUser;
					}
					else
					{
						this._MaUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPlayLists(CTPlayList entity)
		{
			this.SendPropertyChanging();
			entity.PlayList = this;
		}
		
		private void detach_CTPlayLists(CTPlayList entity)
		{
			this.SendPropertyChanging();
			entity.PlayList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SangTac")]
	public partial class SangTac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSangTac;
		
		private string _TenNguoiST;
		
		private EntitySet<Nhac> _Nhacs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSangTacChanging(int value);
    partial void OnMaSangTacChanged();
    partial void OnTenNguoiSTChanging(string value);
    partial void OnTenNguoiSTChanged();
    #endregion
		
		public SangTac()
		{
			this._Nhacs = new EntitySet<Nhac>(new Action<Nhac>(this.attach_Nhacs), new Action<Nhac>(this.detach_Nhacs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSangTac", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSangTac
		{
			get
			{
				return this._MaSangTac;
			}
			set
			{
				if ((this._MaSangTac != value))
				{
					this.OnMaSangTacChanging(value);
					this.SendPropertyChanging();
					this._MaSangTac = value;
					this.SendPropertyChanged("MaSangTac");
					this.OnMaSangTacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiST", DbType="NVarChar(50)")]
		public string TenNguoiST
		{
			get
			{
				return this._TenNguoiST;
			}
			set
			{
				if ((this._TenNguoiST != value))
				{
					this.OnTenNguoiSTChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiST = value;
					this.SendPropertyChanged("TenNguoiST");
					this.OnTenNguoiSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SangTac_Nhac", Storage="_Nhacs", ThisKey="MaSangTac", OtherKey="MaSangTac")]
		public EntitySet<Nhac> Nhacs
		{
			get
			{
				return this._Nhacs;
			}
			set
			{
				this._Nhacs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nhacs(Nhac entity)
		{
			this.SendPropertyChanging();
			entity.SangTac = this;
		}
		
		private void detach_Nhacs(Nhac entity)
		{
			this.SendPropertyChanging();
			entity.SangTac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<Nhac> _Nhacs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public TheLoai()
		{
			this._Nhacs = new EntitySet<Nhac>(new Action<Nhac>(this.attach_Nhacs), new Action<Nhac>(this.detach_Nhacs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Nhac", Storage="_Nhacs", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<Nhac> Nhacs
		{
			get
			{
				return this._Nhacs;
			}
			set
			{
				this._Nhacs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nhacs(Nhac entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_Nhacs(Nhac entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
}
#pragma warning restore 1591
